import{_ as e,o as t,c as l,a}from"./app-7rGY8hGP.js";const i={},r=a('<h1 id="integer在mapper中的判断" tabindex="-1"><a class="header-anchor" href="#integer在mapper中的判断" aria-hidden="true">#</a> Integer在Mapper中的判断</h1><h2 id="阐述" tabindex="-1"><a class="header-anchor" href="#阐述" aria-hidden="true">#</a> 阐述</h2><ol><li>Integer类型在Mapper使用<code>&lt;if test=&quot;state == 1&quot;&gt;</code>直接判断即可 <ul><li>前端state传入是null，条件不成立（不会影响整个判断，底层给处理了）</li><li>前端state传入是1，条件会成立</li></ul></li><li>Integer类型在Mapper使用<code>&lt;if test=&quot;state == null&quot;&gt;</code><ul><li>前端state传入是null或前端不给state传值，条件成立</li><li>前端state传入任意值，条件不成立</li></ul></li><li>Integer类型在Mapper使用<code>&lt;if test=&quot;state != -1&quot;&gt;</code><ul><li>前端state传入是-1，条件会不成立</li><li>前端state传入是null或前端不给state传值，条件成立</li><li>前端state出入除-1外的其他数字，条件成立</li></ul></li><li>Integer类型在Mapper使用<code>&lt;if test=&quot;state != null and state != -1&quot;&gt;</code><ul><li>前端state传入是-1，条件不成立</li><li>前端state传入是null或前端不给state传值，条件不成立</li><li>前端state出入除-1外的其他数字，条件成立</li></ul></li><li>Intger类型在Mapper使用<code>&lt;if test=&quot;state == &#39;1&#39;&quot;&gt;</code>，不能用&#39;&#39;，这个是用来判断字符串的。</li></ol><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h2><p>Integer在Mapper使用中前端传入null和数字一样成为了其中一种情况</p><p>Integer在Mapper不能用&#39;&#39;判断</p><p>int在Mapper使用中前端传入null，Java会自动把值赋值成0</p>',7),n=[r];function s(o,p){return t(),l("div",null,n)}const c=e(i,[["render",s],["__file","Integer在Mapper中的判断.html.vue"]]);export{c as default};
