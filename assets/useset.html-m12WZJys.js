import{_ as s,r as o,o as n,c as i,b as t,e as a,w as r,d as e,a as c}from"./app-7rGY8hGP.js";const l={},h=t("h1",{id:"redis基础类型——set-集合",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#redis基础类型——set-集合","aria-hidden":"true"},"#"),e(" Redis基础类型——set（集合）")],-1),u={class:"table-of-contents"},_=c('<h2 id="介绍基本概念" tabindex="-1"><a class="header-anchor" href="#介绍基本概念" aria-hidden="true">#</a> 介绍基本概念</h2><p>Redis集合相当于Java语言里得HashSet，它内部的键值对是无序的、唯一的。它的内部实现相当于一个特殊的字典，字典中所有的value都是一个值NULL。</p><p>当集合中最后一个元素被移除后，数据结构被自动删除，内存被回收。</p><p>set结构可以用来存储在某活动中中奖的用户ID，因为有去重功能，可以保证同一个用户不会中奖2次。</p><h2 id="命令与java方法对应关系" tabindex="-1"><a class="header-anchor" href="#命令与java方法对应关系" aria-hidden="true">#</a> 命令与Java方法对应关系</h2><table><thead><tr><th>命令</th><th>Java方法</th><th>描述</th></tr></thead><tbody><tr><td>SADD</td><td>add(key,values)</td><td>将一个或多个 member 元素加入到集合 key 当中</td></tr><tr><td>SPOP</td><td>pop(key)</td><td>移除并返回集合中的一个随机元素</td></tr><tr><td>SRANDMEMBER</td><td>randomMember(key)</td><td>返回集合中的一个随机元素</td></tr><tr><td>SDIFF</td><td>difference(keys)</td><td>返回一个集合的全部成员，该集合是所有给定集合之间的差集</td></tr><tr><td>SINTER</td><td>intersect(keys)</td><td>返回一个集合的全部成员，该集合是所有给定集合的交集</td></tr><tr><td>SMOVE</td><td>move(key, value1, key2)</td><td>将 member 元素从 source 集合移动到 destination 集合</td></tr><tr><td>SUNION</td><td>union(key, key2)</td><td>返回一个集合的全部成员，该集合是所有给定集合的并集</td></tr><tr><td>SREM</td><td>remove(key, value1))</td><td>移除集合 key 中的一个或多个 member 元素</td></tr></tbody></table>',6);function m(v,k){const d=o("router-link");return n(),i("div",null,[h,t("nav",u,[t("ul",null,[t("li",null,[a(d,{to:"#介绍基本概念"},{default:r(()=>[e("介绍基本概念")]),_:1})]),t("li",null,[a(d,{to:"#命令与java方法对应关系"},{default:r(()=>[e("命令与Java方法对应关系")]),_:1})])])]),_])}const p=s(l,[["render",m],["__file","useset.html.vue"]]);export{p as default};
