import{_ as r,r as i,o as c,c as d,b as a,e as n,w as t,d as e,a as p}from"./app-7rGY8hGP.js";const o="/life-doc/assets/f1405182b066ad185c24424f7afde008-fMrh6WXE.png",l="/life-doc/assets/fca122d79869238e91177d98cedc5aa5-lNxS2pQa.png",b="/life-doc/assets/7b8d2afe17202dc185cd782059e0e8ca-yz-WxZnx.png",h="/life-doc/assets/5ae9350d01129bc9316303a0e12206af-cAMG_QNt.png",u="/life-doc/assets/6527c1beda72fb65a8e92b6b9645437d-4RjTH36S.png",m="/life-doc/assets/04d985e5e3a23ff8cd3c319810c57ddf-P_cQdUrn.png",_="/life-doc/assets/0af930c6d87ba685d9ed03663bec387c-8Akr2BLu.png",f="/life-doc/assets/64e050866246cbb05a085aa29a087f69-Yyw4G-rQ.png",k="/life-doc/assets/74d1cd70716accff212c0a8781050c04-XXzG4Yd3.png",g="/life-doc/assets/a188cc753a9c48cb96d3447bcf34161d-gTDv1ED6.png",v="/life-doc/assets/8b4af65c663f128b8c82a3d3882bf5e2-ciBj9pzM.png",q={},x=a("h1",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),e(" 安装")],-1),Q={class:"table-of-contents"},M=p('<h2 id="docker安装rabbit-mq" tabindex="-1"><a class="header-anchor" href="#docker安装rabbit-mq" aria-hidden="true">#</a> Docker安装Rabbit MQ</h2><h3 id="从仓库找到rabbitmq" tabindex="-1"><a class="header-anchor" href="#从仓库找到rabbitmq" aria-hidden="true">#</a> 从仓库找到rabbitmq</h3><p>使用<code>docker search rabbitmq</code>命令查看仓库中rabbitmq的版本</p><p><img src="'+o+'" alt=""></p><h3 id="使用pull命令拉取镜像" tabindex="-1"><a class="header-anchor" href="#使用pull命令拉取镜像" aria-hidden="true">#</a> 使用pull命令拉取镜像</h3><p>使用<code>docker pull rabbitmq</code>，这个命令会拉到最新版本的rabbit mq</p><p><img src="'+l+'" alt=""></p><p>如下为下载成功效果</p><p><img src="'+b+'" alt=""></p><h3 id="查看镜像" tabindex="-1"><a class="header-anchor" href="#查看镜像" aria-hidden="true">#</a> 查看镜像</h3><p>使用<code>docker images</code>查看本地的镜像列表，</p><p><img src="'+h+'" alt=""></p><h3 id="启动镜像" tabindex="-1"><a class="header-anchor" href="#启动镜像" aria-hidden="true">#</a> 启动镜像</h3><p>使用<code>docker run -d --hostname my-rabbit --name rabbit -p 15672:15672 -p 5672:5672 rabbitmq</code>命令后台启动容器</p><p><img src="'+u+'" alt=""></p><p>可以看到一串字符，这是一个46个16进制的字符（256位二进制）</p><blockquote><p>命令说明：</p><p>-p 15672:15672 说明，-p 服务器外网端口：映射的docker内部端口，就是说外网15672映射到docker的15672端口向外提供服务。</p></blockquote><p>用<code>docker ps</code>命令查看启动后效果</p><p><img src="'+m+'" alt=""></p><h3 id="查看rabbit-mq管理端控制台" tabindex="-1"><a class="header-anchor" href="#查看rabbit-mq管理端控制台" aria-hidden="true">#</a> 查看Rabbit MQ管理端控制台</h3><p>首先打开防火墙的端口，这个很重要不然访问不了。我这里是腾讯云，找到对应服务器的防火墙添加规则就好</p><p><img src="'+_+'" alt=""></p><p>15672端口为管理端服务端，访问ip:15672进入Rabbit MQ管理端</p><blockquote><p>默认用户名密码：guest/guest</p></blockquote><h4 id="解决访问15672端口显示服务器拒绝连接" tabindex="-1"><a class="header-anchor" href="#解决访问15672端口显示服务器拒绝连接" aria-hidden="true">#</a> 解决访问15672端口显示服务器拒绝连接</h4><p>访问ip:15672发现无法访问，使用telnet命令也无法访问</p><p>使用 <code>docker exec -it 85ea354e3684 /bin/bash</code> 命令</p><p>切换到sbin下</p><p>cd sbin</p><p>安装web插件</p><p>rabbitmq-plugins enable rabbitmq_management</p><p><img src="'+f+'" alt=""></p><p>再次访问，可以进入</p><p><img src="'+k+'" alt=""></p><h2 id="安全" tabindex="-1"><a class="header-anchor" href="#安全" aria-hidden="true">#</a> 安全</h2><p>RabbitMQ默认账号名是guest，密码也是guest。这意味着访问者无需任何验证就可以登录并访问RabbitMQ。这是一种非常危险和不安全的配置，因为任何人都可以登录并访问您的RabbitMQ服务器并读取或发送数据。</p><p>因此，务必在安装RabbitMQ后更改默认账号名和密码。不要使用弱密码，并且强烈建议启用身份验证机制。</p><h3 id="docker修改rabbit-mq默认密码" tabindex="-1"><a class="header-anchor" href="#docker修改rabbit-mq默认密码" aria-hidden="true">#</a> docker修改Rabbit MQ默认密码</h3><p>上面方式没有直接设置用户密码，通过如下方式进行修改</p><h4 id="进入到docker-rabbit-mq容器内部" tabindex="-1"><a class="header-anchor" href="#进入到docker-rabbit-mq容器内部" aria-hidden="true">#</a> 进入到docker rabbit mq容器内部</h4><h4 id="查看当前用户列表。" tabindex="-1"><a class="header-anchor" href="#查看当前用户列表。" aria-hidden="true">#</a> 查看当前用户列表。</h4><p>使用命令：<code>rabbitmqctl list_users</code></p><p><img src="'+g+'" alt=""></p><h4 id="修改密码" tabindex="-1"><a class="header-anchor" href="#修改密码" aria-hidden="true">#</a> 修改密码</h4><p>命令：<code>rabbitmqctl change_password [username] &#39;[NewPassword]&#39;</code></p><blockquote><p>username：对应不同用户映射的密码，比如需要修改管理员 admin 的密码那么就填 admin NewPassword：直接写你的新密码即可</p></blockquote><p>效果如下：</p><p><img src="'+v+`" alt=""></p><h3 id="docker启动时直接设置用户密码" tabindex="-1"><a class="header-anchor" href="#docker启动时直接设置用户密码" aria-hidden="true">#</a> docker启动时直接设置用户密码</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token punctuation">\\</span>
 <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_USER</span><span class="token operator">=</span>账户 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_PASS</span><span class="token operator">=</span>密码 <span class="token punctuation">\\</span>
 <span class="token parameter variable">--name</span> mq <span class="token punctuation">\\</span>
 <span class="token parameter variable">--hostname</span> mq1 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 <span class="token punctuation">\\</span>
 <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
 rabbitmq:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>~完</p>`,52);function R(w,B){const s=i("router-link");return c(),d("div",null,[x,a("nav",Q,[a("ul",null,[a("li",null,[n(s,{to:"#docker安装rabbit-mq"},{default:t(()=>[e("Docker安装Rabbit MQ")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#从仓库找到rabbitmq"},{default:t(()=>[e("从仓库找到rabbitmq")]),_:1})]),a("li",null,[n(s,{to:"#使用pull命令拉取镜像"},{default:t(()=>[e("使用pull命令拉取镜像")]),_:1})]),a("li",null,[n(s,{to:"#查看镜像"},{default:t(()=>[e("查看镜像")]),_:1})]),a("li",null,[n(s,{to:"#启动镜像"},{default:t(()=>[e("启动镜像")]),_:1})]),a("li",null,[n(s,{to:"#查看rabbit-mq管理端控制台"},{default:t(()=>[e("查看Rabbit MQ管理端控制台")]),_:1})])])]),a("li",null,[n(s,{to:"#安全"},{default:t(()=>[e("安全")]),_:1}),a("ul",null,[a("li",null,[n(s,{to:"#docker修改rabbit-mq默认密码"},{default:t(()=>[e("docker修改Rabbit MQ默认密码")]),_:1})]),a("li",null,[n(s,{to:"#docker启动时直接设置用户密码"},{default:t(()=>[e("docker启动时直接设置用户密码")]),_:1})])])])])]),M])}const A=r(q,[["render",R],["__file","0_安装RabbitMQ.html.vue"]]);export{A as default};
