import{_ as t,o as s,c as i,a as e}from"./app-7rGY8hGP.js";const l={},a=e('<h1 id="收集一些知识点" tabindex="-1"><a class="header-anchor" href="#收集一些知识点" aria-hidden="true">#</a> 收集一些知识点</h1><h2 id="list中的sublist方法" tabindex="-1"><a class="header-anchor" href="#list中的sublist方法" aria-hidden="true">#</a> List中的subList方法</h2><p>下标从0开始含头不含尾，返回这之间部分的视图。实际上，返回的list是靠原来的list支持的。</p><p>所以，对原来的list和返回的list做的“非结构性修改”(non-structural changes)，<strong>都会影响到彼此对方</strong>。</p><p>所谓的“非结构性修改”，是指不涉及到list的大小改变的修改。相反，结构性修改，指改变了list大小的修改。</p><ul><li><p>如果返回的子list发生结构性修改，那么原来的list的大小也会发生变化；</p></li><li><p>如果原来的list（不包括由于返回的子list导致的改变）发生结构性修改，那么返回的子list语义上将会是抛出一个ConcurrentModificationException</p></li></ul>',6),n=[a];function r(c,o){return s(),i("div",null,n)}const d=t(l,[["render",r],["__file","收集一些知识点.html.vue"]]);export{d as default};
