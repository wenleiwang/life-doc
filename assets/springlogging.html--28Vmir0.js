import{_ as c,r as o,o as l,c as i,b as n,e as a,w as t,d as s,a as u}from"./app-7rGY8hGP.js";const k="/life-doc/assets/91ad28fcc1e8c65eaa41bccdae5895ad-Z_z2Urs9.png",r="/life-doc/assets/7acafc5adf65bedcdfeafcc1444c3d0e-l0i477_4.png",d="/life-doc/assets/f82fe311e32bdcbef15d3626b4a4f7c2-848fNzgx.png",v="/life-doc/assets/86e0ddd8278588343ad95fa7ec3bc00c-Q4QlKKHV.png",m="/life-doc/assets/13c3d464dae230af52d2634276f9e2f3-D6uXTG1x.png",g="/life-doc/assets/a0f5a51f202b908803bfb86946a59430-PJ6ZWkQ6.png",b="/life-doc/assets/aab6b4c739f8ce8252dd70504afd0ecf-QBYNx3on.png",y={},f=n("h1",{id:"springboot使用的日志",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springboot使用的日志","aria-hidden":"true"},"#"),s(" SpringBoot使用的日志")],-1),w={class:"table-of-contents"},L=n("h2",{id:"_1-执行过程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-执行过程","aria-hidden":"true"},"#"),s(" 1.执行过程")],-1),S=u('<p><img src="'+k+'" alt=""></p><p>在listeners.starting();执行中 <img src="'+r+'" alt=""> getApplicationListeners(event, type)这个方法会获得LoggingApplicationListeners、BackgroundPreinitializer、DelegationgApplicationListener、LiquibaseServiceLocatorApplicationListener 这4个Listener，其中LoggingApplicationListeners负责的就是</p><p>配置LoggingSystem的ApplicationListener 。 如果环境包含logging.config属性，它将用于引导日志系统，否则使用默认配置。 无论如何，如果环境包含logging.level.*条目，日志级别将被自定义，并且可以使用logging.group定义日志组。 当环境包含未设置为&quot;false&quot;的debug或trace属性时，将启用 Spring、Tomcat、Jetty 和 Hibernate 的调试和跟踪日志记录（即，如果您使用 java -jar myapp.jar [--debug | --trace]）。 如果您喜欢忽略这些属性，您可以将parseArgs设置为false 。 默认情况下，日志输出仅写入控制台。 如果需要日志文件，可以使用logging.file.path和logging.file.name属性。 一些系统属性可能被设置为副作用，如果日志配置支持占位符（即 log4j 或 logback），这些可能很有用： LOG_FILE设置为应该写入的日志文件的路径值（如果有）。 如果可以确定，则将PID设置为当前进程 ID 的值。</p><p>类之间的关系很简单 <img src="'+d+'" alt=""></p><p>继承了ApplicationEvent，标志这个类是一个事件对象。这也就是为什么starting()方法为什么会调用到这个类的原因。 随后执行到 <img src="'+v+'" alt=""></p><p>因为事件对象的关系随后就执行到<code>onApplicationEvent(ApplicationEvent event)</code>方法 <img src="'+m+'" alt=""></p><p>进到<code>onApplicationStartingEvent(ApplicationStartingEvent event)</code>方法 <img src="'+g+`" alt=""></p><p>看下这个方法的详情<code>this.loggingSystem = LoggingSystem.get(event.getSpringApplication().getClassLoader());</code> 这个方法在LoggingSystem这个类中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SYSTEM_PROPERTY</span> <span class="token operator">=</span> <span class="token class-name">LoggingSystem</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NONE</span> <span class="token operator">=</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token constant">SYSTEMS</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> systems <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    systems<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ch.qos.logback.core.Appender&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.boot.logging.logback.LogbackLoggingSystem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    systems<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.logging.log4j.core.impl.Log4jContextFactory&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;org.springframework.boot.logging.log4j2.Log4J2LoggingSystem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    systems<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;java.util.logging.LogManager&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.boot.logging.java.JavaLoggingSystem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">SYSTEMS</span> <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span>systems<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">LoggingSystem</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> loggingSystem <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 从系统配置取org.springframework.boot.logging.LoggingSystem是否为空</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>loggingSystem<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 判断loggingSystem是否是none字符</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">NONE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>loggingSystem<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">NoOpLoggingSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">get</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> loggingSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果系统没有配置走这步，</span>
    <span class="token comment">// 过滤留下类名存在并且可以加载的元素</span>
    <span class="token comment">// 调用get初始化类得到第一个返回。没有报No suitable logging system located错误</span>
    <span class="token keyword">return</span> <span class="token constant">SYSTEMS</span><span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">get</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;No suitable logging system located&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">LoggingSystem</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">,</span> <span class="token class-name">String</span> loggingSystemClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> systemClass <span class="token operator">=</span> <span class="token class-name">ClassUtils</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>loggingSystemClass<span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> constructor <span class="token operator">=</span> systemClass<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        constructor<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">LoggingSystem</span><span class="token punctuation">)</span> constructor<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我这里加载到的是<code>Log4J2LoggingSystem</code>类</p><p><img src="`+b+`" alt=""></p><p><code>this.loggingSystem.beforeInitialize();</code>代码中注释是：将记录系统重置为限制输出。 该方法可以在initialize(LoggingInitializationContext, String, LogFile)之前调用，以减少日志噪音，直到系统完全初始化。 到这里就全部执行完成，其余都是return了。 。。。这到底是干了个啥。。。</p><h2 id="_2-看下loggingapplicationlistener的全部代码" tabindex="-1"><a class="header-anchor" href="#_2-看下loggingapplicationlistener的全部代码" aria-hidden="true">#</a> 2.看下LoggingApplicationListener的全部代码</h2><p>最后让我来看下这个类<code>LoggingApplicationListener</code>，代码不多从头看</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingApplicationListener</span> <span class="token keyword">implements</span> <span class="token class-name">GenericApplicationListener</span> <span class="token punctuation">{</span>
    <span class="token comment">// 返回logging.level的ConfigurationPropertyName </span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurationPropertyName</span> <span class="token constant">LOGGING_LEVEL</span> <span class="token operator">=</span> <span class="token class-name">ConfigurationPropertyName</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;logging.level&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 返回logging.group的ConfigurationPropertyName </span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurationPropertyName</span> <span class="token constant">LOGGING_GROUP</span> <span class="token operator">=</span> <span class="token class-name">ConfigurationPropertyName</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;logging.group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建String键和LogLevel值类型的新Bindable Map </span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Bindable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">STRING_LOGLEVEL_MAP</span> <span class="token operator">=</span> <span class="token class-name">Bindable</span><span class="token punctuation">.</span><span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
			<span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Bindable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">STRING_STRINGS_MAP</span> <span class="token operator">=</span> <span class="token class-name">Bindable</span>
			<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">ResolvableType</span><span class="token punctuation">.</span><span class="token function">forClassWithGenerics</span><span class="token punctuation">(</span><span class="token class-name">MultiValueMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The default order for the LoggingApplicationListener.
     * LoggingApplicationListener的默认顺序，整数最小值+20
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_ORDER</span> <span class="token operator">=</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token constant">HIGHEST_PRECEDENCE</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The name of the Spring property that contains a reference to the logging
	 * configuration to load.
     * Spring 属性的名称，其中包含对要加载的日志记录配置的引用。
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CONFIG_PROPERTY</span> <span class="token operator">=</span> <span class="token string">&quot;logging.config&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The name of the Spring property that controls the registration of a shutdown hook
	 * to shut down the logging system when the JVM exits.
     * Spring 属性的名称，它控制注册关闭挂钩以在 JVM 退出时关闭日志记录系统
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token class-name">LoggingSystem</span><span class="token punctuation">#</span><span class="token field">getShutdownHandler</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REGISTER_SHUTDOWN_HOOK_PROPERTY</span> <span class="token operator">=</span> <span class="token string">&quot;logging.register-shutdown-hook&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The name of the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LoggingSystem</span></span><span class="token punctuation">}</span> bean.
     * LoggingSystem Bean 的名字
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LOGGING_SYSTEM_BEAN_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;springBootLoggingSystem&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The name of the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LogFile</span></span><span class="token punctuation">}</span> bean.
     * LogFile bean 的名字
	 * <span class="token keyword">@since</span> 2.2.0
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LOG_FILE_BEAN_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;springBootLogFile&quot;</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * The name of the<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">LoggerGroups</span></span><span class="token punctuation">}</span> bean.
     * LoggerGroups bean 的名字
	 * <span class="token keyword">@since</span> 2.2.0
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">LOGGER_GROUPS_BEAN_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;springBootLoggerGroups&quot;</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">DEFAULT_GROUP_LOGGERS</span><span class="token punctuation">;</span>
	<span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token comment">// 初始化默认的日志组</span>
		<span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loggers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.core.codec&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.web&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.boot.actuate.endpoint.web&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;web&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.boot.web.servlet.ServletContextInitializerBeans&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;sql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.jdbc.core&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;sql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.hibernate.SQL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;sql&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;org.jooq.tools.LoggerListener&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">DEFAULT_GROUP_LOGGERS</span> <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span>loggers<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogLevel</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token constant">SPRING_BOOT_LOGGING_LOGGERS</span><span class="token punctuation">;</span>
	<span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token comment">// 初始化默认的SPRING_BOOT_LOGGING_LOGGERS</span>
		<span class="token class-name">MultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogLevel</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loggers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;sql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;web&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework.boot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">,</span> <span class="token string">&quot;org.springframework&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">,</span> <span class="token string">&quot;org.apache.tomcat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">,</span> <span class="token string">&quot;org.apache.catalina&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">,</span> <span class="token string">&quot;org.eclipse.jetty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		loggers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">,</span> <span class="token string">&quot;org.hibernate.tool.hbm2ddl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">SPRING_BOOT_LOGGING_LOGGERS</span> <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableMap</span><span class="token punctuation">(</span>loggers<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">EVENT_TYPES</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">ApplicationStartingEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
			<span class="token class-name">ApplicationEnvironmentPreparedEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationPreparedEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ContextClosedEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
			<span class="token class-name">ApplicationFailedEvent</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">SOURCE_TYPES</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">ApplicationContext</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">AtomicBoolean</span> shutdownHookRegistered <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicBoolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 使用的日志系统，在onApplicationStartingEvent()方法中赋值</span>
	<span class="token keyword">private</span> <span class="token class-name">LoggingSystem</span> loggingSystem<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">LogFile</span> logFile<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">LoggerGroups</span> loggerGroups<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">int</span> order <span class="token operator">=</span> <span class="token constant">DEFAULT_ORDER</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> parseArgs <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">LogLevel</span> springBootLogging <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsEventType</span><span class="token punctuation">(</span><span class="token class-name">ResolvableType</span> resolvableType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>resolvableType<span class="token punctuation">.</span><span class="token function">getRawClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">EVENT_TYPES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsSourceType</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> sourceType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>sourceType<span class="token punctuation">,</span> <span class="token constant">SOURCE_TYPES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isAssignableFrom</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> supportedTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> supportedType <span class="token operator">:</span> supportedTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>supportedType<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationStartingEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// listeners.starting();中的第一个Listener会执行到这个方法</span>
			<span class="token function">onApplicationStartingEvent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationStartingEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationEnvironmentPreparedEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">onApplicationEnvironmentPreparedEvent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEnvironmentPreparedEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationPreparedEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">onApplicationPreparedEvent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ApplicationPreparedEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ContextClosedEvent</span>
				<span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ContextClosedEvent</span><span class="token punctuation">)</span> event<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">onContextClosedEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">ApplicationFailedEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">onApplicationFailedEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onApplicationStartingEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationStartingEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 根据类加载器获取不同的日志系统。详情看下面详细介绍</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem <span class="token operator">=</span> <span class="token class-name">LoggingSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getSpringApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">.</span><span class="token function">beforeInitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onApplicationEnvironmentPreparedEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationEnvironmentPreparedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem <span class="token operator">=</span> <span class="token class-name">LoggingSystem</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getSpringApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">initialize</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token function">getSpringApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onApplicationPreparedEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationPreparedEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span><span class="token constant">LOGGING_SYSTEM_BEAN_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span><span class="token constant">LOGGING_SYSTEM_BEAN_NAME</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logFile <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span><span class="token constant">LOG_FILE_BEAN_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span><span class="token constant">LOG_FILE_BEAN_NAME</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>beanFactory<span class="token punctuation">.</span><span class="token function">containsBean</span><span class="token punctuation">(</span><span class="token constant">LOGGER_GROUPS_BEAN_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			beanFactory<span class="token punctuation">.</span><span class="token function">registerSingleton</span><span class="token punctuation">(</span><span class="token constant">LOGGER_GROUPS_BEAN_NAME</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onContextClosedEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">.</span><span class="token function">cleanUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">onApplicationFailedEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">.</span><span class="token function">cleanUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Initialize the logging system according to preferences expressed through the
	 * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Environment</span></span><span class="token punctuation">}</span> and the classpath.
	 * <span class="token keyword">@param</span> <span class="token parameter">environment</span> the environment
	 * <span class="token keyword">@param</span> <span class="token parameter">classLoader</span> the classloader
	 */</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">,</span> <span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">new</span> <span class="token class-name">LoggingSystemProperties</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>logFile <span class="token operator">=</span> <span class="token class-name">LogFile</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>logFile <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>logFile<span class="token punctuation">.</span><span class="token function">applyToSystemProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoggerGroups</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_GROUP_LOGGERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">initializeEarlyLoggingLevel</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">initializeSystem</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>logFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">initializeFinalLoggingLevels</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">registerShutdownHookIfNecessary</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggingSystem<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initializeEarlyLoggingLevel</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parseArgs <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSet</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;debug&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging <span class="token operator">=</span> <span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSet</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;trace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging <span class="token operator">=</span> <span class="token class-name">LogLevel</span><span class="token punctuation">.</span><span class="token constant">TRACE</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isSet</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">,</span> <span class="token class-name">String</span> property<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> value <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initializeSystem</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">,</span> <span class="token class-name">LoggingSystem</span> system<span class="token punctuation">,</span> <span class="token class-name">LogFile</span> logFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">LoggingInitializationContext</span> initializationContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoggingInitializationContext</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> logConfig <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">CONFIG_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ignoreLogConfig</span><span class="token punctuation">(</span>logConfig<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			system<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>initializationContext<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> logFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				<span class="token class-name">ResourceUtils</span><span class="token punctuation">.</span><span class="token function">getURL</span><span class="token punctuation">(</span>logConfig<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				system<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>initializationContext<span class="token punctuation">,</span> logConfig<span class="token punctuation">,</span> logFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// NOTE: We can&#39;t use the logger here to report the problem</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Logging system failed to initialize using configuration from &#39;&quot;</span> <span class="token operator">+</span> logConfig <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">ignoreLogConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span> logConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>logConfig<span class="token punctuation">)</span> <span class="token operator">||</span> logConfig<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;-D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initializeFinalLoggingLevels</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">,</span> <span class="token class-name">LoggingSystem</span> system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">bindLoggerGroups</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">initializeSpringBootLogging</span><span class="token punctuation">(</span>system<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">setLogLevels</span><span class="token punctuation">(</span>system<span class="token punctuation">,</span> environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">bindLoggerGroups</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Binder</span> binder <span class="token operator">=</span> <span class="token class-name">Binder</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
			binder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token constant">LOGGING_GROUP</span><span class="token punctuation">,</span> <span class="token constant">STRING_STRINGS_MAP</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifBound</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups<span class="token operator">::</span><span class="token function">putAll</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Initialize loggers based on the <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">setSpringBootLogging</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span><span class="token punctuation">)</span></span>
	 * springBootLogging<span class="token punctuation">}</span> setting. By default this implementation will pick an appropriate
	 * set of loggers to configure based on the level.
	 * <span class="token keyword">@param</span> <span class="token parameter">system</span> the logging system
	 * <span class="token keyword">@param</span> <span class="token parameter">springBootLogging</span> the spring boot logging level requested
	 * <span class="token keyword">@since</span> 2.2.0
	 */</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initializeSpringBootLogging</span><span class="token punctuation">(</span><span class="token class-name">LoggingSystem</span> system<span class="token punctuation">,</span> <span class="token class-name">LogLevel</span> springBootLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span></span> configurer <span class="token operator">=</span> <span class="token function">getLogLevelConfigurer</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token constant">SPRING_BOOT_LOGGING_LOGGERS</span><span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>springBootLogging<span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">configureLogLevel</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> springBootLogging<span class="token punctuation">,</span> configurer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Set logging levels based on relevant <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Environment</span></span><span class="token punctuation">}</span> properties.
	 * <span class="token keyword">@param</span> <span class="token parameter">system</span> the logging system
	 * <span class="token keyword">@param</span> <span class="token parameter">environment</span> the environment
	 * <span class="token keyword">@since</span> 2.2.0
	 */</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">setLogLevels</span><span class="token punctuation">(</span><span class="token class-name">LoggingSystem</span> system<span class="token punctuation">,</span> <span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span></span> customizer <span class="token operator">=</span> <span class="token function">getLogLevelConfigurer</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Binder</span> binder <span class="token operator">=</span> <span class="token class-name">Binder</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span></span> levels <span class="token operator">=</span> binder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token constant">LOGGING_LEVEL</span><span class="token punctuation">,</span> <span class="token constant">STRING_LOGLEVEL_MAP</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token operator">::</span><span class="token function">emptyMap</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		levels<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> level<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">configureLogLevel</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> level<span class="token punctuation">,</span> customizer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">configureLogLevel</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">LogLevel</span> level<span class="token punctuation">,</span> <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span></span> configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">LoggerGroup</span> group <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>loggerGroups<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>group <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> group<span class="token punctuation">.</span><span class="token function">hasMembers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				group<span class="token punctuation">.</span><span class="token function">configureLogLevel</span><span class="token punctuation">(</span>level<span class="token punctuation">,</span> configurer<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		configurer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">LogLevel</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLogLevelConfigurer</span><span class="token punctuation">(</span><span class="token class-name">LoggingSystem</span> system<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> level<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token class-name">LoggingSystem</span><span class="token punctuation">.</span><span class="token constant">ROOT_LOGGER_NAME</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> name<span class="token punctuation">;</span>
				system<span class="token punctuation">.</span><span class="token function">setLogLevel</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">LogMessage</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot set level &#39;%s&#39; for &#39;%s&#39;&quot;</span><span class="token punctuation">,</span> level<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">registerShutdownHookIfNecessary</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span> <span class="token class-name">LoggingSystem</span> loggingSystem<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">boolean</span> registerShutdownHook <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">REGISTER_SHUTDOWN_HOOK_PROPERTY</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>registerShutdownHook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">Runnable</span> shutdownHandler <span class="token operator">=</span> loggingSystem<span class="token punctuation">.</span><span class="token function">getShutdownHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>shutdownHandler <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> shutdownHookRegistered<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token function">registerShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>shutdownHandler<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">void</span> <span class="token function">registerShutdownHook</span><span class="token punctuation">(</span><span class="token class-name">Thread</span> shutdownHook<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span>shutdownHook<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>order <span class="token operator">=</span> order<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>order<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Sets a custom logging level to be used for Spring Boot and related libraries.
	 * <span class="token keyword">@param</span> <span class="token parameter">springBootLogging</span> the logging level
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSpringBootLogging</span><span class="token punctuation">(</span><span class="token class-name">LogLevel</span> springBootLogging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>springBootLogging <span class="token operator">=</span> springBootLogging<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * Sets if initialization arguments should be parsed for <span class="token punctuation">{</span><span class="token keyword">@literal</span> debug<span class="token punctuation">}</span> and
	 * <span class="token punctuation">{</span><span class="token keyword">@literal</span> trace<span class="token punctuation">}</span> properties (usually defined from <span class="token punctuation">{</span><span class="token keyword">@literal</span> --debug<span class="token punctuation">}</span> or
	 * <span class="token punctuation">{</span><span class="token keyword">@literal</span> --trace<span class="token punctuation">}</span> command line args). Defaults to <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span>.
	 * <span class="token keyword">@param</span> <span class="token parameter">parseArgs</span> if arguments should be parsed
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParseArgs</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> parseArgs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>parseArgs <span class="token operator">=</span> parseArgs<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function E(h,_){const p=o("router-link"),e=o("RouterLink");return l(),i("div",null,[f,n("nav",w,[n("ul",null,[n("li",null,[a(p,{to:"#_1-执行过程"},{default:t(()=>[s("1.执行过程")]),_:1})]),n("li",null,[a(p,{to:"#_2-看下loggingapplicationlistener的全部代码"},{default:t(()=>[s("2.看下LoggingApplicationListener的全部代码")]),_:1})])])]),L,n("p",null,[s("在SpringBoot启动过程中有这么两句话，"),a(e,{to:"/view/spring/2_springbootstart.html"},{default:t(()=>[s("点击查看详细启动过程")]),_:1})]),S])}const q=c(y,[["render",E],["__file","springlogging.html.vue"]]);export{q as default};
