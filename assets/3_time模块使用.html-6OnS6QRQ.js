import{_ as e,o as a,c as n,a as s}from"./app-7rGY8hGP.js";const t="/life-doc/assets/img_20231119_2-afemlitS.png",i={},r=s(`<h1 id="time库的使用" tabindex="-1"><a class="header-anchor" href="#time库的使用" aria-hidden="true">#</a> time库的使用</h1><p>import time</p><h2 id="获取时间" tabindex="-1"><a class="header-anchor" href="#获取时间" aria-hidden="true">#</a> 获取时间</h2><p>.time()函数：获取当前时间戳，很长的浮点数。1970年1月1日0点0分开始到当前时刻为止秒为单位的数值</p><p>.ctime()：获取当前时间并以易读的方式标识返回字符串</p><p>.gmtime()：获取当前时间，标识计算机可以处理的时间</p><h2 id="时间格式化" tabindex="-1"><a class="header-anchor" href="#时间格式化" aria-hidden="true">#</a> 时间格式化</h2><h3 id="时间转字符串" tabindex="-1"><a class="header-anchor" href="#时间转字符串" aria-hidden="true">#</a> 时间转字符串</h3><p>.strftime(tpl, ts)：tpl是格式化模板字符串，用来定义输出效果。ts是计算机内部事件类型变量</p><div class="language-ptyhon line-numbers-mode" data-ext="ptyhon"><pre class="language-ptyhon"><code>import time

t = time.gmtime()
time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;, t)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：&#39;2023-11-19 07:10:21&#39;</p><p><img src="`+t+`" alt=""></p><h3 id="字符串转时间" tabindex="-1"><a class="header-anchor" href="#字符串转时间" aria-hidden="true">#</a> 字符串转时间</h3><p>.strptime(timeStr, &#39;%Y-%m-%d %H:%M:%S&#39;)：str字符串形式的时间值，模板</p><h2 id="程序计时应用" tabindex="-1"><a class="header-anchor" href="#程序计时应用" aria-hidden="true">#</a> 程序计时应用</h2><p>程序计时指测量起止动作所经历时间的过程 python时间库提供一个非常精准的测量时间的方法 .perf_counter()：可以获取CPU以其频率运行的时钟，这个时间一般采用纳秒计算非常精准。单位为妙。这个计数值起点不确定，连续调用差值才有意义</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
star <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span>
end <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>end <span class="token operator">-</span> star<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.sleep(x)：程序停止x秒</p>`,18),p=[r];function d(c,o){return a(),n("div",null,p)}const m=e(i,[["render",d],["__file","3_time模块使用.html.vue"]]);export{m as default};
