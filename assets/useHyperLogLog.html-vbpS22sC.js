import{_ as o,r as p,o as l,c as i,b as n,e,w as t,d as a,a as c}from"./app-7rGY8hGP.js";const u={},r=n("h1",{id:"hyperloglog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hyperloglog","aria-hidden":"true"},"#"),a(" HyperLogLog")],-1),d={class:"table-of-contents"},k=c(`<h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><ul><li>统计UV（独立访客）</li></ul><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="命令行模式" tabindex="-1"><a class="header-anchor" href="#命令行模式" aria-hidden="true">#</a> 命令行模式</h3><p>HyperLogLog提供2个指令pfadd和pfcount，一个是增加计数，一个是获取计数。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>127.0.0.1:6379&gt; pfadd 20220525 user3
(integer) 1
127.0.0.1:6379&gt; pfadd 20220525 user4
(integer) 1
127.0.0.1:6379&gt; pfcount 20220525
(integer) 4
127.0.0.1:6379&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java模式" tabindex="-1"><a class="header-anchor" href="#java模式" aria-hidden="true">#</a> Java模式</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 成功会返回1</span>
<span class="token class-name">Long</span> add <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHyperLogLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;20220525&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;add:&quot;</span> <span class="token operator">+</span> add<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 返回统计的总数</span>
<span class="token class-name">Long</span> size <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHyperLogLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token string">&quot;20220525&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;size&quot;</span> <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHyperLogLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;20220525&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用注意" tabindex="-1"><a class="header-anchor" href="#使用注意" aria-hidden="true">#</a> 使用注意</h2><ul><li>HyperLogLog提供不精确的去重方案，虽然不精确，但也不是很离谱，标准误差0.81%</li><li>每个HyperLogLog结构需要12KB的存储空间，Redis已经对HyperLogLog的存储进行了优化，不是一开始就12KB。计数比较小时采用稀疏矩阵存储，空间占用很小，数据慢慢变大超过阈值时，才会变成稠密矩阵12KB。</li><li>pf是指数据结构的发明人Philippe Flaolet的缩写。</li></ul><hr><blockquote><p>版本说明：</p><p>Java 8</p><p>SpringBoot v2.3.3.RELEASE</p><p>Redis 6.2.5</p></blockquote>`,12);function v(g,h){const s=p("router-link");return l(),i("div",null,[r,n("nav",d,[n("ul",null,[n("li",null,[e(s,{to:"#使用场景"},{default:t(()=>[a("使用场景")]),_:1})]),n("li",null,[e(s,{to:"#使用方法"},{default:t(()=>[a("使用方法")]),_:1}),n("ul",null,[n("li",null,[e(s,{to:"#命令行模式"},{default:t(()=>[a("命令行模式")]),_:1})]),n("li",null,[e(s,{to:"#java模式"},{default:t(()=>[a("Java模式")]),_:1})])])]),n("li",null,[e(s,{to:"#使用注意"},{default:t(()=>[a("使用注意")]),_:1})])])]),k])}const f=o(u,[["render",v],["__file","useHyperLogLog.html.vue"]]);export{f as default};
