import{_ as n,o as s,c as a,a as t}from"./app-7rGY8hGP.js";const p={},e=t(`<p>/* <img src="https://raw.githubusercontent.com/zsviczian/obsidian-excalidraw-plugin/master/images/scripts-change-shape.jpg" alt=""></p><p>The script allows you to change the shape and fill style of selected Rectangles, Diamonds, Ellipses, Lines, Arrows and Freedraw.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">const</span> fillStylesDispaly<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Dots (⚠ VERY SLOW performance on large objects!)&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Zigzag&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Zigzag-line&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dashed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hachure&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Cross-hatch&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Solid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fillStyles<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;dots&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zigzag&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;zigzag-line&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;dashed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hachure&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cross-hatch&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;solid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fillShapes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;ellipse&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;diamond&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;freedraw&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;line&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> boxShapesDispaly<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;○ ellipse&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;□ rectangle&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;◇ diamond&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> boxShapes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;ellipse&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rectangle&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;diamond&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> lineShapesDispaly<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;- line&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;⭢ arrow&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> lineShapes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;arrow&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> editedElements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> elements <span class="token operator">=</span> ea<span class="token punctuation">.</span><span class="token function">getViewSelectedElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>boxShapes<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>elements<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newShape <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">suggester</span><span class="token punctuation">(</span>boxShapesDispaly<span class="token punctuation">,</span> boxShapes<span class="token punctuation">,</span> <span class="token string">&quot;Change shape of &#39;box&#39; type elements in selection, press ESC to skip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>newShape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	editedElements <span class="token operator">=</span> elements<span class="token punctuation">;</span>
    elements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>el<span class="token punctuation">.</span>type <span class="token operator">=</span> newShape<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

elements <span class="token operator">=</span> ea<span class="token punctuation">.</span><span class="token function">getViewSelectedElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>fillShapes<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>elements<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newFillStyle <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">suggester</span><span class="token punctuation">(</span>fillStylesDispaly<span class="token punctuation">,</span> fillStyles<span class="token punctuation">,</span> <span class="token string">&quot;Change the fill style of elements in selection, press ESC to skip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>newFillStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	editedElements <span class="token operator">=</span> editedElements<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token operator">!</span>editedElements<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>el<span class="token punctuation">.</span>id<span class="token operator">===</span>e<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>el<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> newFillStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

elements <span class="token operator">=</span> ea<span class="token punctuation">.</span><span class="token function">getViewSelectedElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>lineShapes<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>elements<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newShape <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">suggester</span><span class="token punctuation">(</span>lineShapesDispaly<span class="token punctuation">,</span> lineShapes<span class="token punctuation">,</span> <span class="token string">&quot;Change shape of &#39;line&#39; type elements in selection, press ESC to skip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>newShape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	editedElements <span class="token operator">=</span> editedElements<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token operator">=&gt;</span><span class="token operator">!</span>editedElements<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token operator">=&gt;</span>el<span class="token punctuation">.</span>id<span class="token operator">===</span>e<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	  el<span class="token punctuation">.</span>type <span class="token operator">=</span> newShape<span class="token punctuation">;</span>
	  <span class="token keyword">if</span><span class="token punctuation">(</span>newShape <span class="token operator">===</span> <span class="token string">&quot;arrow&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		el<span class="token punctuation">.</span>endArrowhead <span class="token operator">=</span> <span class="token string">&quot;triangle&quot;</span><span class="token punctuation">;</span>
	  <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ea<span class="token punctuation">.</span><span class="token function">copyViewElementsToEAforEditing</span><span class="token punctuation">(</span>editedElements<span class="token punctuation">)</span><span class="token punctuation">;</span>

ea<span class="token punctuation">.</span><span class="token function">addElementsToView</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","Change shape of selected elements.html.vue"]]);export{k as default};
