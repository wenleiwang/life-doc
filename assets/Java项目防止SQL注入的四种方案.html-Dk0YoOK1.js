import{_ as n,o as s,c as a,a as e}from"./app-7rGY8hGP.js";const t="/life-doc/assets/dc684abb8218313adc22c0ac7fcc450e-DaxvcSUB.png",p={},o=e('<h1 id="java项目防止sql注入的四种方案" tabindex="-1"><a class="header-anchor" href="#java项目防止sql注入的四种方案" aria-hidden="true">#</a> Java项目防止SQL注入的四种方案</h1><p><img src="'+t+`" alt=""></p><ul><li><p>一、什么是SQL注入？</p></li><li><p>二、Java项目防止SQL注入方式</p></li><li><ul><li>1、PreparedStatement防止SQL注入</li><li>2、mybatis中#{}防止SQL注入</li><li>3、对请求参数的敏感词汇进行过滤</li><li>4、nginx反向代理防止SQL注入</li></ul></li></ul><h2 id="一、什么是sql注入" tabindex="-1"><a class="header-anchor" href="#一、什么是sql注入" aria-hidden="true">#</a> 一、什么是SQL注入？</h2><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p><div class="language-SQL line-numbers-mode" data-ext="SQL"><pre class="language-SQL"><code>String sql = &quot;delete from table1 where id = &quot; + &quot;id&quot;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个id从请求参数中获取，若参数被拼接为：</p><p>❝ 1001 or 1 = 1 ❞</p><p>最执行语句变为：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>String <span class="token keyword">sql</span> <span class="token operator">=</span> <span class="token string">&quot;delete from table1 where id = 1001 or 1 = 1&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，数据库的数据都会被清空掉，后果非常严重</p><h2 id="二、java项目防止sql注入方式" tabindex="-1"><a class="header-anchor" href="#二、java项目防止sql注入方式" aria-hidden="true">#</a> 二、Java项目防止SQL注入方式</h2><p>这里总结4种：</p><ul><li>PreparedStatement防止SQL注入</li><li>mybatis中#{}防止SQL注入</li><li>对请求参数的敏感词汇进行过滤</li><li>nginx反向代理防止SQL注入</li></ul><h3 id="_1、preparedstatement防止sql注入" tabindex="-1"><a class="header-anchor" href="#_1、preparedstatement防止sql注入" aria-hidden="true">#</a> 1、PreparedStatement防止SQL注入</h3><p>PreparedStatement具有预编译功能，以上述SQL为例</p><p>使用PreparedStatement预编译后的SQL为：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> table1 <span class="token keyword">where</span> id<span class="token operator">=</span> ?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时SQL语句结构已固定，无论&quot;?&quot;被替换为任何参数，SQL语句只认为where后面只有一个条件，当再传入 1001 or 1 = 1时，语句会报错，从而达到防止SQL注入效果</p><h3 id="_2、mybatis中-防止sql注入" tabindex="-1"><a class="header-anchor" href="#_2、mybatis中-防止sql注入" aria-hidden="true">#</a> 2、mybatis中#{}防止SQL注入</h3><p>mybatis中#{}表达式防止SQL注入与PreparedStatement类似，都是对SQL语句进行预编译处理</p><p><strong>注意：</strong></p><p>#{} ：参数占位符</p><p>\${} ：拼接替换符，不能防止SQL注入，一般用于</p><ul><li>传入数据库对象（如：数据库名称、表名）</li><li>order by 后的条件</li></ul><h3 id="_3、对请求参数的敏感词汇进行过滤" tabindex="-1"><a class="header-anchor" href="#_3、对请求参数的敏感词汇进行过滤" aria-hidden="true">#</a> 3、对请求参数的敏感词汇进行过滤</h3><p>这里是springboot的写法，如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Enumeration</span></span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/**
 * @Auther: 睡竹
 * @Date: 2023/03/07
 * @Description: sql防注入过滤器
 */</span>
<span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>urlPatterns <span class="token operator">=</span> <span class="token string">&quot;/*&quot;</span><span class="token punctuation">,</span>filterName <span class="token operator">=</span> <span class="token string">&quot;sqlFilter&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> sql注入过滤
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServletRequest</span> request <span class="token operator">=</span> servletRequest<span class="token punctuation">;</span>
        <span class="token class-name">ServletResponse</span> response <span class="token operator">=</span> servletResponse<span class="token punctuation">;</span>
        <span class="token comment">// 获得所有请求参数名</span>
        <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>names<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 得到参数名</span>
            <span class="token class-name">String</span> name <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 得到参数对应值</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> values<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sql <span class="token operator">+=</span> values<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sqlValidate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//TODO 这里直接抛异常处理，前后端交互项目中，请把错误信息按前后端&quot;数据返回的VO&quot;对象进行封装</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IOException</span><span class="token punctuation">(</span><span class="token string">&quot;您发送请求中的参数中含有非法字符&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * <span class="token keyword">@description</span> 匹配效验
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">sqlValidate</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// 统一转为小写</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 过滤掉的sql关键字，特殊字符前面需要加\\\\进行转义</span>
        <span class="token class-name">String</span> badStr <span class="token operator">=</span>
                <span class="token string">&quot;select|update|and|or|delete|insert|truncate|char|into|substr|ascii|declare|exec|count|master|into|drop|execute|table|&quot;</span><span class="token operator">+</span>
                        <span class="token string">&quot;char|declare|sitename|xp_cmdshell|like|from|grant|use|group_concat|column_name|&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;information_schema.columns|table_schema|union|where|order|by|&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;&#39;\\\\*|\\\\;|\\\\-|\\\\--|\\\\+|\\\\,|\\\\//|\\\\/|\\\\%|\\\\#&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//使用正则表达式进行匹配</span>
        <span class="token keyword">boolean</span> matches <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>badStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> matches<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、nginx反向代理防止sql注入" tabindex="-1"><a class="header-anchor" href="#_4、nginx反向代理防止sql注入" aria-hidden="true">#</a> 4、nginx反向代理防止SQL注入</h3><p>越来越多网站使用nginx进行反向代理，该层我们也可以进行防止SQL注入配置。</p><p>将下面的Nginx配置文件代码放入到server块中，然后重启Nginx即可</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$request_method</span> !~* GET|POST)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">444</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token comment">#使用444错误代码可以更加减轻服务器负载压力。</span>
 <span class="token comment">#防止SQL注入</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~* (\\$|<span class="token string">&#39;|--|[+|(%20)]union[+|(%20)]|[+|(%20)]insert[+|(%20)]|[+|(%20)]drop[+|(%20)]|[+|(%20)]truncate[+|(%20)]|[+|(%20)]update[+|(%20)]|[+|(%20)]from[+|(%20)]|[+|(%20)]grant[+|(%20)]|[+|(%20)]exec[+|(%20)]|[+|(%20)]where[+|(%20)]|[+|(%20)]select[+|(%20)]|[+|(%20)]and[+|(%20)]|[+|(%20)]or[+|(%20)]|[+|(%20)]count[+|(%20)]|[+|(%20)]exec[+|(%20)]|[+|(%20)]chr[+|(%20)]|[+|(%20)]mid[+|(%20)]|[+|(%20)]like[+|(%20)]|[+|(%20)]iframe[+|(%20)]|[\\&lt;|%3c]script[\\&gt;|%3e]|javascript|alert|webscan|dbappsecurity|style|confirm\\(|innerhtml|innertext)(.*)$) { return 555; }
 if (<span class="token variable">$uri</span> ~* (/~).*) { return 501; }
 if (<span class="token variable">$uri</span> ~* (<span class="token escape entity">\\\\</span>x.)) { return 501; }
 #防止SQL注入 
 if (<span class="token variable">$query_string</span> ~* &quot;[;&#39;</span>&lt;&gt;].*<span class="token string">&quot;) { return 509; }
 if (<span class="token variable">$request_uri</span> ~ &quot;</span> <span class="token string">&quot;) { return 509; }
 if (<span class="token variable">$request_uri</span> ~ (\\/\\.+)) { return 509; }
 if (<span class="token variable">$request_uri</span> ~ (\\.+\\/)) { return 509; }
 #if (<span class="token variable">$uri</span> ~* (insert|select|delete|update|count|master|truncate|declare|exec|\\*|<span class="token escape entity">\\&#39;</span>)(.*)$ ) { return 503; }
 #防止SQL注入
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>(cost\\()|(concat\\()<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]union[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]and[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]select[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]or[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]delete[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]update[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$request_uri</span> ~* &quot;</span>[+|(%20)]insert[+|(%20)]<span class="token string">&quot;) { return 504; }
 if (<span class="token variable">$query_string</span> ~ &quot;</span>(&lt;|%3C).*script.*(&gt;|%3E)<span class="token string">&quot;) { return 505; }
 if (<span class="token variable">$query_string</span> ~ &quot;</span>GLOBALS(=|\\[|\\%[0-9A-Z]</span><span class="token punctuation">{</span>0,2<span class="token punctuation">}</span>)&quot;) <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">505</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;_REQUEST(=|\\[|\\%[0-9A-Z]{0,2})&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">505</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;proc/self/environ&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">505</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;mosConfig_[a-zA-Z_]{1,21}(=|\\%3D)&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">505</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;base64_(en|de)code\\(.*\\)&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">505</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;[a-zA-Z0-9_]=http://&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">506</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;[a-zA-Z0-9_]=(\\.\\.//?)+&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">506</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;[a-zA-Z0-9_]=/([a-z0-9_.]//?)+&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">506</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)b&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">507</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;b(erections|hoodia|huronriveracres|impotence|levitra|libido)b&quot;</span>)</span> <span class="token punctuation">{</span>return <span class="token directive"><span class="token keyword">507</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;b(ambien|bluespill|cialis|cocaine|ejaculation|erectile)b&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">507</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$query_string</span> ~ <span class="token string">&quot;b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)b&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">507</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token comment">#这里大家根据自己情况添加删减上述判断参数，cURL、wget这类的屏蔽有点儿极端了，但要“宁可错杀一千，不可放过一个”。</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* YisouSpider|ApacheBench|WebBench|Jmeter|JoeDog|Havij|GetRight|TurnitinBot|GrabNet|masscan|mail2000|github|wget|curl|Java|python)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token comment">#同上，大家根据自己站点实际情况来添加删减下面的屏蔽拦截参数。</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;Go-Ahead-Got-It&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;GetWeb!&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;Go!Zilla&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;Download Demon&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;Indy Library&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;libwww-perl&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;Nmap Scripting Engine&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;~17ce.com&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;WebBench*&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~* <span class="token string">&quot;spider&quot;</span>)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">508</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">#这个会影响国内某些搜索引擎爬虫，比如：搜狗</span>
 <span class="token comment">#拦截各恶意请求的UA，可以通过分析站点日志文件或者waf日志作为参考配置。</span>
 <span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_referer</span> ~* 17ce.com)</span> <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">509</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token comment">#拦截17ce.com站点测速节点的请求，所以明月一直都说这些测速网站的数据仅供参考不能当真的。</span>
 if ($http_referer ~* WebBench*&quot;) <span class="token punctuation">{</span> <span class="token directive"><span class="token keyword">return</span> <span class="token number">509</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
 <span class="token comment">#拦截WebBench或者类似压力测试工具，其他工具只需要更换名称即可。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,32),c=[o];function i(l,r){return s(),a("div",null,c)}const k=n(p,[["render",i],["__file","Java项目防止SQL注入的四种方案.html.vue"]]);export{k as default};
