import{_ as a,o as e,c as r,a as d}from"./app-7rGY8hGP.js";const n={},t=d('<h1 id="秘钥加密算法" tabindex="-1"><a class="header-anchor" href="#秘钥加密算法" aria-hidden="true">#</a> 秘钥加密算法</h1><h2 id="对称秘钥加密算法" tabindex="-1"><a class="header-anchor" href="#对称秘钥加密算法" aria-hidden="true">#</a> 对称秘钥加密算法</h2><p>对称秘钥算法的加密秘钥和解密秘钥相同，又称为共享秘钥算法。</p><h3 id="使用秘钥加密的块算法-data-encryption-standard-des" tabindex="-1"><a class="header-anchor" href="#使用秘钥加密的块算法-data-encryption-standard-des" aria-hidden="true">#</a> 使用秘钥加密的块算法（Data Encryption Standard, DES）</h3><p>明文切分为64位的快（即分组），由56位的秘钥控制变换成64位的密文。</p><h3 id="三重des-triple-des" tabindex="-1"><a class="header-anchor" href="#三重des-triple-des" aria-hidden="true">#</a> 三重DES（Triple-DES）</h3><p>DES算法的改进，使用两把56位的秘钥对对明文做三次DES加解密，密钥长度112位。</p><h3 id="国际数据加密算法-international-data-encryption-algorithm-idea" tabindex="-1"><a class="header-anchor" href="#国际数据加密算法-international-data-encryption-algorithm-idea" aria-hidden="true">#</a> 国际数据加密算法（International Data Encryption Algorithm, IDEA）</h3><p>分组长度64位，秘钥长度128位，已经成为全球通用的加密标准</p><h3 id="高级加密标准-advanced-encryption-standard-aes" tabindex="-1"><a class="header-anchor" href="#高级加密标准-advanced-encryption-standard-aes" aria-hidden="true">#</a> 高级加密标准（Advanced Encryption Standard, AES）</h3><p>分组长度128位，支持128位、192位、256位3种秘钥长度，==用于替换脆弱的DES算法==，且可以通过软件或硬件实现高速加解密。</p><h3 id="sm4国密算法" tabindex="-1"><a class="header-anchor" href="#sm4国密算法" aria-hidden="true">#</a> SM4国密算法</h3><p>分组长度和秘钥长度都是128位</p><h2 id="非对称秘钥加密算法" tabindex="-1"><a class="header-anchor" href="#非对称秘钥加密算法" aria-hidden="true">#</a> 非对称秘钥加密算法</h2><p>非对称加密算法的加密秘钥和解密秘钥不相同，有称为不同享秘钥算法或公钥加密算法。在非对称加密算法中==用公钥加密，私钥解密，可以实现保密通信==；用私钥加密，公钥解密，可实现数字签名。</p><p>非对称加密算法可以分为RSA、SM2国密算法。</p><h3 id="rsa" tabindex="-1"><a class="header-anchor" href="#rsa" aria-hidden="true">#</a> RSA</h3><p>是一种国际通用的公钥加密算法，安全性基于大素数分解的困难性，秘钥的长度可以选择，但目前安全的秘钥长度已经高达2048位。RSA的计算速度比同样安全级别的对称加密算法慢1000倍左右</p><h3 id="sm2国密算法" tabindex="-1"><a class="header-anchor" href="#sm2国密算法" aria-hidden="true">#</a> SM2国密算法</h3><p>基于椭圆曲线离散对数问题，在相同安全程度的要求下，秘钥长度和计算规模都比RSA小的多</p><p>#安全加密</p>',21),i=[t];function h(s,c){return e(),r("div",null,i)}const p=a(n,[["render",h],["__file","秘钥加密算法.html.vue"]]);export{p as default};
