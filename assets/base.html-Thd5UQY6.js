import{_ as p,r as o,o as d,c as l,b as s,e as t,w as e,d as a,a as c}from"./app-7rGY8hGP.js";const r="/life-doc/assets/866fd6b8383148dcaf2a609749a0fba7-IMu_nvUv.png",i="/life-doc/assets/bcef6b40966c283f939dd2beb4a28202-Ff7iGX_x.png",u="/life-doc/assets/35c155197e1ce26ddddc88816fa4fa77-8InmI-m5.png",k="/life-doc/assets/ae1cdf4395018809a4124d3ae40b86a5-Z1t7wouq.png",h={},m=s("h1",{id:"基础语法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#基础语法","aria-hidden":"true"},"#"),a(" 基础语法")],-1),_={class:"table-of-contents"},b=c(`<h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> 字段 <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件 <span class="token keyword">group</span> <span class="token keyword">by</span> 分组 <span class="token keyword">having</span> 分组筛选 <span class="token keyword">limit</span> 分页
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>内连接、右连接、左连接</p><h2 id="增加" tabindex="-1"><a class="header-anchor" href="#增加" aria-hidden="true">#</a> 增加</h2><h2 id="修改" tabindex="-1"><a class="header-anchor" href="#修改" aria-hidden="true">#</a> 修改</h2><p>MySQL官方文档的update语法：</p><p><img src="`+r+`" alt=""></p><p>看到assignment_list的格式是以逗号分隔的col_name=value列表，一下子豁然开朗，开发同学想要的多字段更新语句应该字段用逗号分开</p><h3 id="mysql中update和select关联使用" tabindex="-1"><a class="header-anchor" href="#mysql中update和select关联使用" aria-hidden="true">#</a> MySQL中update和select关联使用</h3><p>例子1：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 更新多个字段的时候，在set后面用逗号分隔即可。</span>
<span class="token keyword">UPDATE</span> A <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span><span class="token punctuation">(</span> <span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>NAME <span class="token keyword">FROM</span> B <span class="token punctuation">)</span> c <span class="token keyword">ON</span> A<span class="token punctuation">.</span>id <span class="token operator">=</span> c<span class="token punctuation">.</span>id <span class="token keyword">SET</span> A<span class="token punctuation">.</span>name <span class="token operator">=</span> c<span class="token punctuation">.</span>name<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子2：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> stock_daily b 
	<span class="token keyword">inner</span> <span class="token keyword">join</span> stock_daily a <span class="token keyword">on</span> a<span class="token punctuation">.</span>id <span class="token operator">=</span> b<span class="token punctuation">.</span>id  
<span class="token keyword">set</span> 
	b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>year<span class="token punctuation">\`</span></span> <span class="token operator">=</span> DATE_FORMAT<span class="token punctuation">(</span> DATE_SUB<span class="token punctuation">(</span>STR_TO_DATE<span class="token punctuation">(</span>CAST<span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token keyword">day</span> <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%Y&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>  
	b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>month<span class="token punctuation">\`</span></span> <span class="token operator">=</span> DATE_FORMAT<span class="token punctuation">(</span> DATE_SUB<span class="token punctuation">(</span>STR_TO_DATE<span class="token punctuation">(</span>CAST<span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token keyword">day</span> <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%Y%m&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>  
	b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>day<span class="token punctuation">\`</span></span> <span class="token operator">=</span> DATE_FORMAT<span class="token punctuation">(</span> DATE_SUB<span class="token punctuation">(</span>STR_TO_DATE<span class="token punctuation">(</span>CAST<span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token keyword">day</span> <span class="token keyword">AS</span> <span class="token keyword">CHAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INTERVAL</span> <span class="token number">1</span> <span class="token keyword">DAY</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%Y%m%d&#39;</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用过程中的非常经典的-坑" tabindex="-1"><a class="header-anchor" href="#使用过程中的非常经典的-坑" aria-hidden="true">#</a> 使用过程中的非常经典的“坑”</h3><p><strong>坑点：</strong></p><p>在MySQL里面update一条记录，语法都正确的，但记录并没有被更新</p><p><strong>复现：</strong></p><p>先创建一个模拟的数据</p><p><img src="`+i+'" alt=""></p><p><strong>有问题的SQL：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> global_company_user <span class="token keyword">set</span> <span class="token identifier"><span class="token punctuation">`</span>user_id<span class="token punctuation">`</span></span><span class="token operator">=</span><span class="token string">&#39;43212&#39;</span> <span class="token operator">and</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token operator">=</span><span class="token string">&#39;李四&#39;</span> <span class="token keyword">where</span> \nid <span class="token operator">=</span> <span class="token number">1603682441172779009</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行后效果：</p><blockquote><p>name的值没有变，但user_id变成了0！</p></blockquote><p><img src="'+u+`" alt=""></p><p><strong>修正的SQL：</strong></p><blockquote><p>在一条UPDATE语句中，如果要更新多个字段，字段间不能使用“AND”，而应该用逗号分隔。</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> apps <span class="token keyword">set</span> owner_code<span class="token operator">=</span><span class="token string">&#39;43212&#39;</span> <span class="token punctuation">,</span> owner_name<span class="token operator">=</span><span class="token string">&#39;李四&#39;</span> <span class="token keyword">where</span> 
owner_code<span class="token operator">=</span><span class="token string">&#39;13245&#39;</span> <span class="token operator">and</span> owner_name<span class="token operator">=</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">;</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+'" alt=""></p><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h2><h2 id="常用的函数" tabindex="-1"><a class="header-anchor" href="#常用的函数" aria-hidden="true">#</a> 常用的函数</h2><table><thead><tr><th>函数格式</th><th>参数</th><th>返回</th><th>示例</th></tr></thead><tbody><tr><td>now()</td><td></td><td>当前时间</td><td></td></tr><tr><td>STR_TO_DATE(str, format)</td><td></td><td>将字符串转换为日期格式</td><td></td></tr><tr><td>DATE_SUB(date,INTERVAL expr type)</td><td><em>date</em> 参数是合法的日期表达式。<br><em>expr</em> 参数是您希望添加的时间间隔</td><td></td><td></td></tr><tr><td>DATE_FORMAT(date,format);</td><td></td><td>数据库日期格式转化为string</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="str-to-date中format" tabindex="-1"><a class="header-anchor" href="#str-to-date中format" aria-hidden="true">#</a> STR_TO_DATE中format</h3><p><code>str</code>为待转换的字符串，<code>format</code>为表示日期格式的字符串。下面是一些常用的日期格式代号：</p><ul><li>%Y：四位数的年份（如：2022）</li><li>%y：两位数的年份（如：22）</li><li>%m：两位数的月份（01~12）</li><li>%d：两位数的日期（01~31）</li><li>%H：两位数的小时（00~23）</li><li>%i：两位数的分钟（00~59）</li><li>%s：两位数的秒钟（00~59）</li></ul><h3 id="date-sub中type-参数" tabindex="-1"><a class="header-anchor" href="#date-sub中type-参数" aria-hidden="true">#</a> DATE_SUB中type 参数</h3><p>可以是下列值：</p><table><thead><tr><th>Type 值</th></tr></thead><tbody><tr><td>MICROSECOND</td></tr><tr><td>SECOND</td></tr><tr><td>MINUTE</td></tr><tr><td>HOUR</td></tr><tr><td>DAY</td></tr><tr><td>WEEK</td></tr><tr><td>MONTH</td></tr><tr><td>QUARTER</td></tr><tr><td>YEAR</td></tr><tr><td>SECOND_MICROSECOND</td></tr><tr><td>MINUTE_MICROSECOND</td></tr><tr><td>MINUTE_SECOND</td></tr><tr><td>HOUR_MICROSECOND</td></tr><tr><td>HOUR_SECOND</td></tr><tr><td>HOUR_MINUTE</td></tr><tr><td>DAY_MICROSECOND</td></tr><tr><td>DAY_SECOND</td></tr><tr><td>DAY_MINUTE</td></tr><tr><td>DAY_HOUR</td></tr><tr><td>YEAR_MONTH</td></tr></tbody></table>',37);function y(v,f){const n=o("router-link");return d(),l("div",null,[m,s("nav",_,[s("ul",null,[s("li",null,[t(n,{to:"#查询"},{default:e(()=>[a("查询")]),_:1})]),s("li",null,[t(n,{to:"#增加"},{default:e(()=>[a("增加")]),_:1})]),s("li",null,[t(n,{to:"#修改"},{default:e(()=>[a("修改")]),_:1}),s("ul",null,[s("li",null,[t(n,{to:"#mysql中update和select关联使用"},{default:e(()=>[a("MySQL中update和select关联使用")]),_:1})]),s("li",null,[t(n,{to:"#使用过程中的非常经典的-坑"},{default:e(()=>[a("使用过程中的非常经典的“坑”")]),_:1})])])]),s("li",null,[t(n,{to:"#删除"},{default:e(()=>[a("删除")]),_:1})]),s("li",null,[t(n,{to:"#常用的函数"},{default:e(()=>[a("常用的函数")]),_:1}),s("ul",null,[s("li",null,[t(n,{to:"#str-to-date中format"},{default:e(()=>[a("STR_TO_DATE中format")]),_:1})]),s("li",null,[t(n,{to:"#date-sub中type-参数"},{default:e(()=>[a("DATE_SUB中type 参数")]),_:1})])])])])]),b])}const g=p(h,[["render",y],["__file","base.html.vue"]]);export{g as default};
